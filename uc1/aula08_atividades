# #um pescador precisa pagar uma multa caso o peso dos peixes exceda 100 quilos. Crie uma função para calcular a multa, se aplicável.

# #quilo do peixe =100kh
# #peso excedente >100kg
# #multa de $10 por peso excedente
# # nao cobrar multa se o peso estiver no limite permitido
# #peso total de peixes 120kg


# def calcular_multa(peso_peixes):
#     limite_peso = 100
#     multa_por_quilo = 10  

#     if peso_peixes > limite_peso:
#         excesso = peso_peixes - limite_peso
#         multa = excesso * multa_por_quilo
#         return multa
#     else:
#         return 0  

# peso = 85
# multa = calcular_multa(peso)

# if multa < 0:
#     print(f"A multa a ser paga é de R$ {multa:.2f}.")
# else:
#     print("Não há multa a ser paga.")


# peso = 120  
# multa = calcular_multa(peso)

# if multa > 0:
#     print(f"A multa a ser paga é de R$ {multa:.2f}.")
# else:
#     print("Não há multa a ser paga.")


#--------------------------------------------------------------------------------------------------------------------------------



#Crie um programa que faça a leitura da altura e do peso de N pessoas para o cálculo do IMC, mostrando ao final a classificação de acordo com a tabela de IMC.
    
 #https://brasilescola.uol.com.br/saude-na-escola/Indice-massa-corporea-imc.htm
    
    #Peso de 5 pessoas

    
# def calcular_imc(peso, altura):
#     return peso / (altura ** 2)

# def classificar_imc(imc):
#     if imc < 18.5:
#         return "Abaixo do peso"
#     elif 18.5 <= imc < 24.9:
#         return "Peso normal"
#     elif 25 <= imc < 29.9:
#         return "Sobrepeso"
#     else:
#         return "Obesidade"

# def main():
#     resultados = []

#     for i in range(5):
#         print(f"\nPessoa {i + 1}:")
#         peso = float(input("Digite o peso (kg): "))
#         altura = float(input("Digite a altura (m): "))
        
#         imc = calcular_imc(peso, altura)
#         classificacao = classificar_imc(imc)
        
#         resultados.append((peso, altura, imc, classificacao))
    
#     print("\nResultados:")
#     for i, (peso, altura, imc, classificacao) in enumerate(resultados):
#         print(f"Pessoa {i + 1}: IMC = {imc:.2f}, Classificação = {classificacao}")

# if __name__ == "__main__":
#     main()



#----------------------------------------------------------------------------------------------------------------

#Crie funções que mostrem um cardápio de um restaurante (pelo menos 4 itens) e que permitam realizar pedidos e fechar a conta.

#Criar cardapio
#ealizar pedidos
#limpar os pedidos depos de fechar a conta

class Restaurante:
    def __init__(self):
        self.cardapio = {
            "1": ("Pizza", 30.00),
            "2": ("Hambúrguer", 25.00),
            "3": ("Salada", 15.00),
            "4": ("Refrigerante", 5.00)
        }
        self.pedidos = []

    def mostrar_cardapio(self):
        print("Cardápio:")
        for key, (item, preco) in self.cardapio.items():
            print(f"{key}. {item} - R${preco:.2f}")

    def fazer_pedido(self, escolha):
        if escolha in self.cardapio:
            self.pedidos.append(self.cardapio[escolha])
            print(f"Você adicionou {self.cardapio[escolha][0]} ao seu pedido.")
        else:
            print("Opção inválida. Tente novamente.")

    def fechar_conta(self):
        total = sum(preco for _, preco in self.pedidos)
        print("Seu pedido:")
        for item, preco in self.pedidos:
            print(f"- {item}: R${preco:.2f}")
        print(f"Total: R${total:.2f}")
        self.pedidos.clear()  


restaurante = Restaurante()

restaurante.mostrar_cardapio()

while True:
    escolha = input("Digite o número do item que deseja pedir (ou 'sair' para fechar a conta): ")
    if escolha.lower() == 'sair':
        break
    restaurante.fazer_pedido(escolha)

restaurante.fechar_conta()
